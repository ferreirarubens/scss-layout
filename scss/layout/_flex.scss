@mixin fx($dir) {
  &-#{$dir} {
    display: flex;
    @if $dir == 'col' {
      flex-direction: column !important;
      &.fx {
        &-start-center {
          justify-content: flex-start;
          align-items: center;
        }
        &-center-start {
          justify-content: center;
          align-items: flex-start;
        }
      }
    }
    @if $dir == 'row' {
      flex-direction: row !important;
    }

    @for $value from 0 through 500 {
      @if $dir == 'col' {
        &.fx-gap-#{$value} > :not(:first-child) {
          margin-top: #{$value}px !important;
        }
      }
      @if $dir == 'row' {
        &.fx-gap-#{$value} > :not(:first-child) {
          margin-left: #{$value}px !important;
        }
      }
    }

    @for $value from 1 through 100 {
      @if $dir == 'col' {
        .fx-#{$value} {
          max-height: calc(#{$value} * 1%) !important;
          flex: 1 1 100% !important;
        }
      }
      @if $dir == 'row' {
        .fx-#{$value} {
          max-width: calc(#{$value} * 1%) !important;
          flex: 1 1 100% !important;
        }
      }
    }
  }
}

@mixin alignRowFlex($x) {
  $yOptions: 'center', 'flex-start', 'stretch', 'flex-end';
  @each $y in $yOptions {
    $yClass: $y;
    @if ($y == 'flex-start' or $y == 'flex-end') {
      $yClass: str-slice($y, 6);
    }
    &-#{$yClass} {
      display: flex;
      justify-content: #{$x};
      align-items: #{$y};
      place-content: #{$y} #{$x};
    }
  }
}

.fx {
  &-fill {
    display: flex;
    height: 100%;
    min-height: 100%;
    min-width: 100%;
    width: 100%;
  }
  &-center {
    @include alignRowFlex('center');
  }

  &-start {
    @include alignRowFlex('flex-start');
  }

  &-end {
    @include alignRowFlex('flex-end');
  }

  &-around {
    @include alignRowFlex('space-around');
  }

  &-between {
    @include alignRowFlex('space-between');
  }

  &-evenly {
    @include alignRowFlex('space-evenly');
  }

  @include fx('col');
  @include fx('row');
}